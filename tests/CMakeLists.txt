
function(add_cpp_test _file_)
    get_filename_component(_name_ ${_file_} NAME_WE)

    add_executable(${_name_} ${_file_})
    add_dependencies(${_name_} statchem)
    set_target_properties(${_name_} PROPERTIES LINKER_LANGUAGE CXX)
    target_include_directories(${_name_} SYSTEM PRIVATE
        ${CMAKE_SOURCE_DIR}/include
        ${CHEMFILES_INCLUDE_DIR}
        ${CMAKE_CURRENT_SOURCE_DIR}/external
    )

    if(MSVC)
        target_compile_options(${_name_} PRIVATE /W4)
    else()
        target_compile_options(${_name_} PRIVATE -Wall -Wextra -pedantic)

        if (${COVERAGE})
            target_compile_options(${_name_} PRIVATE --coverage)
            target_link_libraries(${_name_} PRIVATE --coverage)
        endif()
    endif()

    if (MSVC)
        target_link_libraries( ${_name_} PUBLIC
            statchem
            ws2_32
            Boost::filesystem
            Boost::program_options
            Boost::dynamic_linking
        )
    else()
        target_link_libraries( ${_name_} PUBLIC
            statchem
            Boost::filesystem
            Boost::program_options
            pthread
        )
    endif()

    add_test(NAME ${_name_}
        COMMAND ${CMAKE_CURRENT_BINARY_DIR}/${_name_}
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
    )

    if (MSVC)
        set_tests_properties(${_name_}
            PROPERTIES ENVIRONMENT "PATH=${PATH_STRING}\;${Boost_LIBRARY_DIRS}\;${CMAKE_BINARY_DIR}\\chemfiles\\bin"
        )
    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
        set_tests_properties(${_name_}
            PROPERTIES ENVIRONMENT "DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${CMAKE_BINARY_DIR}/chemfiles/lib"
        )
    endif()
endfunction()

file(GLOB all_test_files
    ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp
    ${CMAKE_CURRENT_SOURCE_DIR}/capi/*.c
)

foreach(test_file IN LISTS all_test_files)
    add_cpp_test(${test_file})
endforeach(test_file)
